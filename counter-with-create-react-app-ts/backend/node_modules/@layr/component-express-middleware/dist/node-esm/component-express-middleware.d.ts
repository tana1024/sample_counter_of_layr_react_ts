/**
 * @module component-express-middleware
 *
 * An [Express](https://expressjs.com/) middleware allowing to serve a root [`Component`](https://layrjs.com/docs/v1/reference/component) so it can be accessed by a [`ComponentHTTPClient`](https://layrjs.com/docs/v1/reference/component-http-client).
 *
 * #### Usage
 *
 * Call the [`serveComponent()`](https://layrjs.com/docs/v1/reference/component-express-middleware#serve-component-function) function to create a middleware for your Express application.
 *
 * **Example:**
 *
 * ```
 * import express from 'express';
 * import {Component} from '@layr/component';
 * import {serveComponent} from '@layr/component-express-middleware';
 *
 * class Movie extends Component {
 *   // ...
 * }
 *
 * const app = express();
 *
 * app.use('/api', serveComponent(Movie));
 *
 * app.listen(3210);
 * ```
 */
/// <reference types="node" />
import type { Component } from '@layr/component';
import type { ComponentServer, ComponentServerOptions } from '@layr/component-server';
import type { IncomingMessage, ServerResponse } from 'http';
declare type Request = IncomingMessage & {
    url: string;
};
declare type Response = ServerResponse & {
    json: (data: unknown) => void;
};
export declare type ServeComponentOptions = ComponentServerOptions & {
    limit?: number | string;
    delay?: number;
    errorRate?: number;
};
/**
 * Creates an [Express](https://expressjs.com/) middleware exposing the specified root [`Component`](https://layrjs.com/docs/v1/reference/component) class.
 *
 * @param componentOrComponentServer The root [`Component`](https://layrjs.com/docs/v1/reference/component) class to serve. An instance of a [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server) will be created under the hood. Alternatively, you can pass an existing instance of a [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server).
 * @param [options.version] A number specifying the version of the created [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server) (default: `undefined`).
 *
 * @returns An Express middleware.
 *
 * @category Functions
 */
export declare function serveComponent(componentOrComponentServer: typeof Component | ComponentServer, options?: ServeComponentOptions): (request: Request, response: Response) => Promise<void>;
export {};
