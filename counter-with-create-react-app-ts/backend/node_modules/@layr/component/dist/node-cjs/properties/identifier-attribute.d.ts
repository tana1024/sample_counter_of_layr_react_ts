import type { Component } from '../component';
import { Attribute, AttributeOptions } from './attribute';
export declare type IdentifierValue = string | number;
/**
 * *Inherits from [`Attribute`](https://layrjs.com/docs/v1/reference/attribute).*
 *
 * A base class from which [`PrimaryIdentifierAttribute`](https://layrjs.com/docs/v1/reference/primary-identifier-attribute) and [`SecondaryIdentifierAttribute`](https://layrjs.com/docs/v1/reference/secondary-identifier-attribute) are constructed. Unless you build a custom identifier attribute class, you probably won't have to use this class directly.
 */
export declare class IdentifierAttribute extends Attribute {
    constructor(name: string, parent: Component, options?: AttributeOptions);
    getParent(): Component;
    setOptions(options?: AttributeOptions): void;
    getValue(options?: {
        throwIfUnset?: boolean;
        autoFork?: boolean;
    }): string | number | undefined;
    setValue(value: IdentifierValue, { source }?: {
        source?: number | undefined;
    }): {
        previousValue: string | number | undefined;
        newValue: string | number | undefined;
    };
    unsetValue(): {
        previousValue: string | number | undefined;
    };
    static isIdentifierAttribute(value: any): value is IdentifierAttribute;
}
/**
 * Returns whether the specified value is an `IdentifierAttribute` class.
 *
 * @param value A value of any type.
 *
 * @returns A boolean.
 *
 * @category Utilities
 */
export declare function isIdentifierAttributeClass(value: any): value is typeof IdentifierAttribute;
/**
 * Returns whether the specified value is an `IdentifierAttribute` instance.
 *
 * @param value A value of any type.
 *
 * @returns A boolean.
 *
 * @category Utilities
 */
export declare function isIdentifierAttributeInstance(value: any): value is IdentifierAttribute;
