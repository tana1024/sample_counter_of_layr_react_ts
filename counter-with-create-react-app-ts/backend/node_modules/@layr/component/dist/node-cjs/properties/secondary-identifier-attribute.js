"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSecondaryIdentifierAttributeInstance = exports.isSecondaryIdentifierAttributeClass = exports.SecondaryIdentifierAttribute = void 0;
const identifier_attribute_1 = require("./identifier-attribute");
/**
 * *Inherits from [`IdentifierAttribute`](https://layrjs.com/docs/v1/reference/identifier-attribute).*
 *
 * A `SecondaryIdentifierAttribute` is a special kind of attribute that uniquely identify a [Component](https://layrjs.com/docs/v1/reference/component) instance.
 *
 * Contrary to a [`PrimaryIdentifierAttribute`](https://layrjs.com/docs/v1/reference/primary-identifier-attribute), you can define more than one `SecondaryIdentifierAttribute` in a `Component`.
 *
 * Another difference with a `PrimaryIdentifierAttribute` is that a `SecondaryIdentifierAttribute` value is mutable (i.e., it can change over time).
 *
 * #### Usage
 *
 * Typically, you create a `SecondaryIdentifierAttribute` and associate it to a component prototype using the [`@secondaryIdentifier()`](https://layrjs.com/docs/v1/reference/component#secondary-identifier-decorator) decorator.
 *
 * A common use case is a `User` component with an immutable primary identifier and a secondary identifier for the email address that can change over time:
 *
 * ```
 * // JS
 *
 * import {Component, primaryIdentifier, secondaryIdentifier} from '﹫layr/component';
 *
 * class User extends Component {
 *   ﹫primaryIdentifier() id;
 *   ﹫secondaryIdentifier() email;
 * }
 * ```
 *
 * ```
 * // TS
 *
 * import {Component, primaryIdentifier, secondaryIdentifier} from '﹫layr/component';
 *
 * class User extends Component {
 *   ﹫primaryIdentifier() id!: string;
 *   ﹫secondaryIdentifier() email!: string;
 * }
 * ```
 *
 * To create a `User` instance, you would do something like:
 *
 * ```
 * const user = new User({email: 'someone@domain.tld'});
 *
 * user.id; // => 'ck41vli1z00013h5xx1esffyn'
 * user.email; // => 'someone@domain.tld'
 * ```
 *
 * Note that the primary identifier (`id`) was auto-generated, but we had to provide a value for the secondary identifier (`email`) because secondary identifiers cannot be `undefined` and they are not commonly auto-generated.
 *
 * Like previously mentioned, contrary to a primary identifier, the value of a secondary identifer can be changed:
 *
 * ```
 * user.email = 'someone-else@domain.tld'; // Okay
 * user.id = 'ck2zrb1xs00013g5to1uimigb'; // Error
 * ```
 *
 * `SecondaryIdentifierAttribute` values are usually of type `'string'` (the default), but you can also have values of type `'number'`:
 *
 * ```
 * // JS
 *
 * import {Component, primaryIdentifier, secondaryIdentifier} from '﹫layr/component';
 *
 * class User extends Component {
 *   ﹫primaryIdentifier() id;
 *   ﹫secondaryIdentifier('number') reference;
 * }
 * ```
 *
 * ```
 * // TS
 *
 * import {Component, primaryIdentifier, secondaryIdentifier} from '﹫layr/component';
 *
 * class User extends Component {
 *   ﹫primaryIdentifier() id!: string;
 *   ﹫secondaryIdentifier('number') reference!: number;
 * }
 * ```
 */
class SecondaryIdentifierAttribute extends identifier_attribute_1.IdentifierAttribute {
    /**
     * Creates an instance of [`SecondaryIdentifierAttribute`](https://layrjs.com/docs/v1/reference/secondary-identifier-attribute). Typically, instead of using this constructor, you would rather use the [`@secondaryIdentifier()`](https://layrjs.com/docs/v1/reference/component#secondary-identifier-decorator) decorator.
     *
     * @param name The name of the attribute.
     * @param parent The component prototype that owns the attribute.
     * @param [options.valueType] A string specifying the type of values the attribute can store. It can be either `'string'` or `'number'` (default: `'string'`).
     * @param [options.default] A function returning the default value of the attribute.
     * @param [options.validators] An array of [validators](https://layrjs.com/docs/v1/reference/validator) for the value of the attribute.
     * @param [options.exposure] A [`PropertyExposure`](https://layrjs.com/docs/v1/reference/property#property-exposure-type) object specifying how the attribute should be exposed to remote access.
     *
     * @returns The [`SecondaryIdentifierAttribute`](https://layrjs.com/docs/v1/reference/secondary-identifier-attribute) instance that was created.
     *
     * @example
     * ```
     * import {Component, SecondaryIdentifierAttribute} from '﹫layr/component';
     *
     * class User extends Component {}
     *
     * const email = new SecondaryIdentifierAttribute('email', User.prototype);
     *
     * email.getName(); // => 'email'
     * email.getParent(); // => User.prototype
     * email.getValueType().toString(); // => 'string'
     * ```
     *
     * @category Creation
     */
    constructor(name, parent, options = {}) {
        super(name, parent, options);
    }
    // === Property Methods ===
    /**
     * See the methods that are inherited from the [`Property`](https://layrjs.com/docs/v1/reference/property#basic-methods) class.
     *
     * @category Property Methods
     */
    // === Attribute Methods ===
    /**
     * See the methods that are inherited from the [`Attribute`](https://layrjs.com/docs/v1/reference/attribute#value-type) class.
     *
     * @category Attribute Methods
     */
    // === Observability ===
    /**
     * See the methods that are inherited from the [`Observable`](https://layrjs.com/docs/v1/reference/observable#observable-class) class.
     *
     * @category Observability
     */
    // === Utilities ===
    static isSecondaryIdentifierAttribute(value) {
        return isSecondaryIdentifierAttributeInstance(value);
    }
}
exports.SecondaryIdentifierAttribute = SecondaryIdentifierAttribute;
/**
 * Returns whether the specified value is a `SecondaryIdentifierAttribute` class.
 *
 * @param value A value of any type.
 *
 * @returns A boolean.
 *
 * @category Utilities
 */
function isSecondaryIdentifierAttributeClass(value) {
    return typeof (value === null || value === void 0 ? void 0 : value.isSecondaryIdentifierAttribute) === 'function';
}
exports.isSecondaryIdentifierAttributeClass = isSecondaryIdentifierAttributeClass;
/**
 * Returns whether the specified value is a `SecondaryIdentifierAttribute` instance.
 *
 * @param value A value of any type.
 *
 * @returns A boolean.
 *
 * @category Utilities
 */
function isSecondaryIdentifierAttributeInstance(value) {
    return isSecondaryIdentifierAttributeClass(value === null || value === void 0 ? void 0 : value.constructor) === true;
}
exports.isSecondaryIdentifierAttributeInstance = isSecondaryIdentifierAttributeInstance;
//# sourceMappingURL=secondary-identifier-attribute.js.map