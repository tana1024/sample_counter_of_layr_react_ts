"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clone = void 0;
const simple_cloning_1 = require("simple-cloning");
const utilities_1 = require("./utilities");
/**
 * Deeply clones any type of values including objects, arrays, and component instances (using Component's [`clone()`](https://layrjs.com/docs/v1/reference/component#clone-instance-method) instance method).
 *
 * @param value A value of any type.
 *
 * @returns A clone of the specified value.
 *
 * @example
 * ```
 * import {clone} from 'ï¹«layr/component';
 *
 * const data = {
 *   token: 'xyz123',
 *   timestamp: 1596600889609,
 *   movie: new Movie({title: 'Inception'})
 * };
 *
 * const dataClone = clone(data);
 * dataClone.token; // => 'xyz123';
 * dataClone.timestamp; // => 1596600889609
 * dataClone.movie; // => A clone of data.movie
 * ```
 *
 * @category Cloning
 * @possiblyasync
 */
function clone(value, options = {}) {
    const { objectCloner: originalObjectCloner, ...otherOptions } = options;
    const objectCloner = function (object) {
        if (originalObjectCloner !== undefined) {
            const clonedObject = originalObjectCloner(object);
            if (clonedObject !== undefined) {
                return clonedObject;
            }
        }
        if (utilities_1.isComponentClass(object)) {
            return object.clone();
        }
        if (utilities_1.isComponentInstance(object)) {
            return object.clone(options);
        }
    };
    return simple_cloning_1.clone(value, { ...otherOptions, objectCloner });
}
exports.clone = clone;
//# sourceMappingURL=cloning.js.map