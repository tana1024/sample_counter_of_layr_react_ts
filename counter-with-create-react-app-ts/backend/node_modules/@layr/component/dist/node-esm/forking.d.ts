import { ForkOptions as SimpleForkOptions } from 'simple-forking';
import type { Component } from './component';
export declare type ForkOptions = SimpleForkOptions & {
    componentProvider?: typeof Component;
    componentClass?: typeof Component;
};
/**
 * Fork any type of values including objects, arrays, and components (using Component's `fork()` [class method](https://layrjs.com/docs/v1/reference/component#fork-class-method) and [instance method](https://layrjs.com/docs/v1/reference/component#fork-instance-method)).
 *
 * @param value A value of any type.
 *
 * @returns A fork of the specified value.
 *
 * @example
 * ```
 * import {fork} from 'ï¹«layr/component';
 *
 * const data = {
 *   token: 'xyz123',
 *   timestamp: 1596600889609,
 *   movie: new Movie({title: 'Inception'})
 * };
 *
 * const dataFork = fork(data);
 * Object.getPrototypeOf(dataFork); // => data
 * dataFork.token; // => 'xyz123';
 * dataFork.timestamp; // => 1596600889609
 * dataFork.movie.isForkOf(data.movie); // => true
 * ```
 *
 * @category Forking
 */
export declare function fork(value: any, options?: ForkOptions): any;
