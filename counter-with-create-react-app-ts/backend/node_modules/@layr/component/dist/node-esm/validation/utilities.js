import { validators } from './validator-builders';
import { Validator, isValidatorInstance } from './validator';
export function normalizeValidator(validator, attribute) {
    if (isValidatorInstance(validator)) {
        return validator;
    }
    if (typeof validator !== 'function') {
        throw new Error(`The specified validator is not a function (${attribute.describe()})`);
    }
    if (Object.values(validators).includes(validator)) {
        throw new Error(`The specified validator is a validator builder that has not been called (${attribute.describe()})`);
    }
    return new Validator(validator);
}
//# sourceMappingURL=utilities.js.map