/// <reference types="node" />
import type { Server } from 'http';
import type { Component } from '@layr/component';
import type { ComponentServer } from '@layr/component-server';
import { ServeComponentOptions } from '@layr/component-koa-middleware';
export declare type ComponentHTTPServerOptions = {
    port?: number;
} & ServeComponentOptions;
/**
 * A class allowing to serve a root [`Component`](https://layrjs.com/docs/v1/reference/component) so it can be accessed by a [`ComponentHTTPClient`](https://layrjs.com/docs/v1/reference/component-http-client).
 *
 * This class provides a basic HTTP server providing one endpoint to serve your root component. If you wish to build an HTTP server providing multiple endpoints, you can use a middleware such as [`component-express-middleware`](https://layrjs.com/docs/v1/reference/component-express-middleware), or implement the necessary plumbing to integrate a [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server) in your custom HTTP server.
 *
 * #### Usage
 *
 * Create an instance of `ComponentHTTPServer` by specifying the root [`Component`](https://layrjs.com/docs/v1/reference/component) you want to serve, and use the [`start()`](https://layrjs.com/docs/v1/reference/component-http-server#start-instance-method) method to start the server.
 *
 * See an example of use in [`ComponentHTTPClient`](https://layrjs.com/docs/v1/reference/component-http-client).
 */
export declare class ComponentHTTPServer {
    _componentServer: ComponentServer;
    _port: number;
    _serveComponentOptions: ServeComponentOptions;
    /**
     * Creates a component HTTP server.
     *
     * @param componentOrComponentServer The root [`Component`](https://layrjs.com/docs/v1/reference/component) class to serve. An instance of a [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server) will be created under the hood. Alternatively, you can pass an existing instance of a [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server).
     * @param [options.port] A number specifying the TCP port to listen to (default: `3333`).
     * @param [options.version] A number specifying the version of the created [`ComponentServer`](https://layrjs.com/docs/v1/reference/component-server) (default: `undefined`).
     *
     * @returns A `ComponentHTTPServer` instance.
     *
     * @category Creation
     */
    constructor(componentOrComponentServer: typeof Component | ComponentServer, options?: ComponentHTTPServerOptions);
    _server: Server | undefined;
    /**
     * Starts the component HTTP server.
     *
     * @example
     * ```
     * const server = new ComponentHTTPServer(Movie, {port: 3210});
     *
     * await server.start();
     * ```
     *
     * @category Methods
     * @async
     */
    start(): Promise<unknown>;
    /**
     * Stops the component HTTP server.
     *
     * @category Methods
     * @async
     */
    stop(): Promise<unknown>;
}
